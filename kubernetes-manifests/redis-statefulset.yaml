apiVersion: v1
kind: Service
metadata:
  name: redis-slave
  labels:
    app: redis
    role: slave
    tier: backend
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: slave
    tier: backend
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-slave
spec:
  serviceName: redis-slave
  replicas: 3
  selector:
    matchLabels:
      app: redis
      role: slave
      tier: backend
  template:
    metadata:
      labels:
        app: redis
        role: slave
        tier: backend
    spec:
      securityContext:
        runAsUser: 999
        fsGroup: 999
      initContainers:
      - name: init-redis
        image: eu.gcr.io/olivierba-sandbox/redis:latest
        command:
        - bash
        - "-c"
        - |
          set -ex
          cp /mnt/config-map/slave.conf /etc/redis.conf
        volumeMounts:
        - name: conf
          mountPath: /etc
          subPath: redis.conf
        - name: config-map
          mountPath: /mnt/config-map
      containers:
      - name: redis
        image: eu.gcr.io/olivierba-sandbox/redis:latest
        args: ["/etc/redis.conf"]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: datadir
          mountPath: /data
        - name: conf
          mountPath: /etc/
          subPath: redis.conf
      volumes:
      - name: config-map
        configMap:
          name: redis
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: conf
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Mi